{"version":3,"sources":["pages/Sort/action.js","pages/Sort/index.js","../node_modules/classnames/index.js"],"names":["actionSortRest","data","type","actionSortSwap","actionSortActivate","actionSortDeactivate","actionSortLock","actionSortDone","EVENT_DELAY","INIT_SORT_NUM","Sort","state","values","cards","done","strValues","getRandomArray","nums","push","Math","ceil","random","setState","props","bubbleSort","swapped","sequence","indexLastUnsorted","length","i","indexes","temp","lockIndex","skipped","Array","from","keys","onChange","e","console","log","target","value","parseInt","start","slice","forEach","event","index","setTimeout","this","sort","className","placeholder","onClick","join","map","card","style","height","transform","sortIndex","key","classNames","isActive","isLocked","React","Component","connect","action","hasOwn","hasOwnProperty","classes","arguments","arg","argType","isArray","inner","apply","call","module","exports","default"],"mappings":"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","file":"static/js/sort.398a9aaf.chunk.js","sourcesContent":["export const actionSortRest = data => ({\n  type: 'SORT_RESET',\n  ...data,\n});\nexport const actionSortSwap = data => ({\n  type: 'SORT_SWAP',\n  ...data,\n});\nexport const actionSortActivate = data => ({\n  type: 'SORT_ACTIVATE',\n  ...data,\n});\nexport const actionSortDeactivate = data => ({\n  type: 'SORT_DEACTIVATE',\n  ...data,\n});\nexport const actionSortLock = data => ({\n  type: 'SORT_LOCK',\n  ...data,\n});\nexport const actionSortDone = () => ({\n  type: 'SORT_DONE',\n});\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as action from './action.js';\nimport './style.css';\n\nconst EVENT_DELAY = 100 // 交换的过渡时间\nconst HEIGHT_INCREMENT = 3 // 高度的增量, 数组的某一个值 * 增量 = 长方形高度\nconst INIT_SORT_NUM = 20\n\nclass Sort extends React.Component {\n\n  state = {\n    values: [], // 值为 SORT_ARRAY 的副本\n    cards: [], // 可视化需要的数组，就是每一个长方形（div元素），数组的每一个值都代表一个div元素\n    done: true, // 表示是否排序完成，为true时，右下角出现重置按钮\n    // strValues 用来解决数组中出现重复的值，移动位置不对的情况\n    strValues: [] // 数组的一个副本，会将数组的值与下标拼起来，形成唯一的一个字符串\n  }\n\n  componentDidMount(){\n    this.getRandomArray()\n  }\n\n  // 随机生成1到100的值\n  getRandomArray = (nums = INIT_SORT_NUM) => {\n    let values = []\n    while(nums){\n      values.push(Math.ceil(Math.random() * 100))\n      nums--\n    }\n    this.setState({ values })\n    this.props.actionSortRest({ values })\n  }\n\n  // 冒泡排序方法，返回包括每一步的数组\n  bubbleSort = (values) => {\n    // sequence 为包括每一步内容的数组\n    let sequence = []\n    // swapped 为判断是否已经排序好的 标志位\n    let swapped\n    // indexLastUnsorted 用来减少不必要的循环\n    let indexLastUnsorted = values.length - 1\n    do {\n      swapped = false\n      for (let i = 0; i < indexLastUnsorted; i++) {\n        // card 是 state.cards 的一个成员\n        // 开始一次循环，就有两个card 的 isActive的值设置为true\n        sequence.push(\n          () => this.props.actionSortActivate({indexes: [i, i + 1]})\n        )\n        // 如果前一个数 大于 后一个数，就交换两数\n        if (values[i] > values[i + 1]) {\n          let temp = values[i]\n          values[i] = values[i + 1]\n          values[i + 1] = temp\n          swapped = true\n          // 满足交换的条件，就重新定义所有card的sortIndex属性\n          sequence.push(\n            () => this.props.actionSortSwap({indexes: [i, i + 1]})\n          )\n        }\n        // 结束这次循环之前，把原来两个card的isActive的值为true的，设置为false\n        sequence.push(\n          () => this.props.actionSortDeactivate({indexes: [i, i + 1]})\n        )\n      }\n      // 外层循环，每循环完一次，就锁定最后一个card，下次这个card 就不参与循环\n      let lockIndex = indexLastUnsorted\n      sequence.push(\n        () => this.props.actionSortLock({indexes: [lockIndex]})\n      )\n      indexLastUnsorted--\n    } while (swapped)\n\n    // 如果提前排序好了，把剩下的card全部锁定\n    let skipped = Array.from(Array(indexLastUnsorted + 1).keys())\n    sequence.push(\n      () => this.props.actionSortLock({indexes: skipped})\n    )\n    // 修改done 为true，完成排序\n    sequence.push(this.props.actionSortDone)\n    return sequence\n  }\n\n  onChange = (e) => {\n    console.log(e.target.value)\n    const nums = parseInt(e.target.value)\n    this.getRandomArray(nums)\n  }\n\n  start = () => {\n    // 排序数组，返回一个包括每步的值 和 每步状态的数组\n    const { values } = this.state\n    this.props.actionSortRest({ values })\n    let sequence = this.bubbleSort(values.slice())\n    // 遍历上边排序得到的数组，定时执行操作，实现动画效果\n    sequence.forEach((event, index) => {\n      setTimeout(() => {\n        if(typeof event === 'function'){\n          event()\n        }\n      }, index * EVENT_DELAY)\n    })\n  }\n\n  render() {\n    const { cards } = this.props.sort\n    const { values } = this.state\n    return (\n      <div className=\"wrapper\">\n        <div className=\"options\">\n          <input onChange={this.onChange} placeholder=\"请输入排序长度\"/>\n          <button onClick={this.start}>开始排序</button>\n          <p>\n            要排序的数组：{values.join(' ')}\n          </p>\n        </div>\n        \n        <div className=\"cards\">\n        {\n          cards.map((card, index) => {\n            return (\n              <div className=\"card-wrapper\"\n                style={{height: card.value * HEIGHT_INCREMENT + 'px',transform: 'translateX('+card.sortIndex*100+'%)'}}\n                key={index}\n              >\n                <div className={classNames('card', {\n                  'card-active': card.isActive,\n                  'card-locked': card.isLocked\n                })}>\n                  {/*<div className=\"value\">{card.value}</div>*/}\n                </div>\n              </div>\n            )\n          })\n        }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sort: state.Sort,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  ...action,\n})(Sort);\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}